@using MyVideoResume.Abstractions.Core
@using MyVideoResume.Abstractions.Resume
@using MyVideoResume.Abstractions.Resume.Formats.JSONResumeFormat
@using MyVideoResume.Data.Models.Resume
@inherits ResumeComponent

<RadzenCard style="background-color:white;">
    <RadzenCard class="rz-shadow-0 rz-border-radius-0" style="margin: 5px calc(-1 * var(--rz-card-padding));background-color:white; cursor: pointer" @onclick=@(()=> NavigateTo("resumes", ResumeItem.Id.ToString()))>
        <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Start" Gap="0">
            <RadzenText style="color: #262526" TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Name</RadzenText>
            <div style=" max-width: 250px; "><RadzenText style="color: #262526; text-overflow:ellipsis; white-space: nowrap; overflow: hidden;" TextStyle="TextStyle.H3" title="@(ResumeItem.ResumeName)">@(ResumeItem.ResumeName)</RadzenText></div>
            <RadzenText Visible=@DisplayItem() style="color: #262526" TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">ID</RadzenText>
            <RadzenText Visible=@DisplayItem() style="color: #262526" TextStyle="TextStyle.Body1">@(ResumeItem.Id)</RadzenText>
            <RadzenText style="color: #262526" TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Creation</RadzenText>
            <RadzenText style="color: #262526" TextStyle="TextStyle.Body1"><b>@(ResumeItem.CreationDateTimeFormatted)</b></RadzenText>
        </RadzenStack>
    </RadzenCard>
    <RadzenCard class="rz-shadow-0 rz-border-radius-0" style="margin: 5px calc(-1 * var(--rz-card-padding)); background-color: #0e44cc; cursor: pointer" @onclick=@(()=> NavigateTo("resumes", ResumeItem.Id.ToString()))>
        <RadzenText TextStyle="TextStyle.H6" style="color:white; "><strong>Details</strong></RadzenText>
        <RadzenRow RowGap="0">
            <RadzenColumn Visible=@DisplayItem()>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0" style="color:white; ">Template</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" style="color:white; "><b> @(ResumeItem.ResumeTemplateName)</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class=" rz-display-flex rz-mt-4 rz-mb-0" style="color:white; ">Public</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" style="color:white; "><b>@(ResumeItem.IsPublic)</b></RadzenText>
            </RadzenColumn>
            <RadzenColumn>
                <RadzenText TextStyle="TextStyle.Overline" style="color:white; " class="rz-display-flex rz-mt-4 rz-mb-0">Summary</RadzenText>
                <RadzenText style="color:white; text-overflow:ellipsis; white-space:normal; overflow: hidden; height:240px" TextStyle="TextStyle.Body1" title="@(ResumeItem.ResumeSummary)">@(ResumeItem.ResumeSummary)</RadzenText>
                @*                 <RadzenText style="color:white; " TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Freight</RadzenText>
                <RadzenText style="color:white; " TextStyle="TextStyle.Body1"><b>@(ResumeEntity?.Basics?.Summary)</b></RadzenText>
 *@            </RadzenColumn>
        </RadzenRow>
    </RadzenCard>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="0">
        <RadzenButton ButtonStyle="ButtonStyle.Danger" Variant="Variant.Text" Icon="delete" Text="Delete" Click=Delete Visible=@DisplayItem() />
        <RadzenButton ButtonStyle="ButtonStyle.Dark" Variant="Variant.Text" Icon="edit" Text="Edit" Visible=@FeatureFlagService.IsResumeBuilderEnabled Click=@(()=> NavigateTo("resumes/builder", ResumeItem.Id)) />
        <RadzenButton ButtonStyle="ButtonStyle.Dark" Variant="Variant.Text" Icon="preview" Text="View" Click=@(()=> NavigateTo("resumes", ResumeItem.Id)) />
    </RadzenStack>
</RadzenCard>

@code {
    public enum ResumePreviewMode
    {
        View,
        Edit
    }

    [Parameter] public EventCallback<ResponseResult> DeleteCompleted { get; set; }

    [Parameter]
    public ResumeSummaryItem ResumeItem { get; set; } = null;

    [Parameter]
    public ResumePreviewMode Mode { get; set; } = ResumePreviewMode.View;

    public bool DisplayItem()
    {
        var result = false;
        switch (Mode)
        {
            case ResumePreviewMode.View:
                result = false;
                break;
            case ResumePreviewMode.Edit:
                result = ResumeItem.UserId == Security.User.Id;
                break;
            default:
                break;
        }
        return result;
    }

    public string ResumeCreationDate { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (ResumeItem == null)
            ResumeItem = new ResumeSummaryItem()
                {
                    ResumeName = "Place Holder",
                    ResumeSummary = "Upload PDF Resume",
                    CreationDateTimeFormatted = DateTime.UtcNow.ToString("yyyy-MM-dd")
                };

    }

    protected async Task Delete()
    {
        var result = new ResponseResult();
        result = await Service.Delete(ResumeItem.Id);
        await DeleteCompleted.InvokeAsync(result);
    }
}
